{"version":3,"sources":["components/Bsd.tsx","components/Code.tsx","components/Scenario.tsx","types.ts","containers/BsdCompany.tsx","containers/BsdNextTreatmentOperation.tsx","containers/BsdPackages.tsx","containers/BsdQuantity.tsx","containers/BsdTransporterReceipt.tsx","containers/BsdSignature.tsx","containers/BsdDocument.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BsdContainer","styled","div","BsdBox","BsdBoxColumn","BsdLabel","label","BsdInput","AutosizeInput","attrs","placeholder","repeat","BsdInputField","field","value","props","form","BsdList","ul","orientation","css","BsdListItem","li","CodeContainer","pre","CodeLine","variant","WasteConsistency","EmitterType","TransporterPackageType","WasteWeightType","ScenarioItem","article","ScenarioItemName","ScenarioItemDescription","small","ScenarioItemStepList","ol","ScenarioItemStepListItem","role","tabIndex","active","BsdCompany","name","component","type","BsdNextTreatmentOperation","BsdPackages","useField","remove","push","map","_","index","Benne","Citerne","Fut","GRV","Other","onClick","newPackage","quantity","BsdQuantity","Estimate","Real","BsdTransporterReceipt","BsdSignature","onCancel","BsdDocument","useFormikContext","values","setFieldValue","Producer","Appendix1","Appendix2","checked","Boolean","temporaryStorage","onChange","company","recipient","transporter","reception","signature","nextTreatmentOperation","emitter","treatment","Solid","Liquid","Gaseous","author","contact","date","Date","toLocaleDateString","refusal","weight","operation","GlobalStyle","createGlobalStyle","Layout","LayoutColumn","LayoutColumnTitle","ScenariosColumn","BsdColumn","CodeColumn","produceScenarioSteps","firstStep","producers","fn","produce","reduce","acc","producer","concat","length","EMITTER_COMPANY","siret","address","email","phone","TRANSPORTER_COMPANY","TRANSPORTER_RECEIPT","number","department","expiresAt","mode","RECIPIENT_COMPANY","SCENARIOS","description","steps","bsd","customId","code","receipt","packages","tons","waste","adr","consistency","step","App","React","currentScenario","setCurrentScenario","scenario","find","Error","previousInitialValues","Math","max","initialValues","onSubmit","enableReinitialize","diffJson","added","removed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd1e38b.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { FieldProps } from \"formik\";\n\nexport const BsdContainer = styled.div`\n  border-bottom: 1px solid #3d3d3d;\n  margin: 1rem;\n`;\nexport const BsdBox = styled.div`\n  border: 1px solid #3d3d3d;\n  border-right: 0;\n  border-bottom: 0;\n  display: flex;\n`;\nexport const BsdBoxColumn = styled.div`\n  flex: 1;\n  border-right: 1px solid #3d3d3d;\n  padding: 0.5rem;\n`;\nexport const BsdLabel = styled.label`\n  display: block;\n  width: 100%;\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;\nconst BsdInput = styled(AutosizeInput).attrs({ placeholder: \" \".repeat(6) })`\n  & input {\n    font: inherit;\n    font-family: \"Pangolin\", cursive;\n    color: inherit;\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n\n    &:not(:focus) {\n      cursor: pointer;\n    }\n  }\n`;\nexport function BsdInputField({\n  field: { value, ...field },\n  form,\n  ...props\n}: FieldProps) {\n  return <BsdInput value={value ?? \"\"} {...field} {...props} />;\n}\n\nexport const BsdList = styled.ul<{ orientation?: \"horizontal\" | \"vertical\" }>`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 1rem 0;\n\n  ${(props) => {\n    switch (props.orientation) {\n      case \"horizontal\":\n        return css`\n          display: flex;\n        `;\n      case \"vertical\":\n      default:\n        return css`\n           ;\n        `;\n    }\n  }}\n`;\nexport const BsdListItem = styled.li`\n  margin: 0 0.5rem 0.25rem 0;\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const CodeContainer = styled.pre`\n  padding: 1rem 0;\n  font-family: \"Source Code Pro\", monospace;\n  margin: 0 0 0.5rem 0;\n`;\nexport const CodeLine = styled.div<{\n  variant: \"added\" | \"removed\" | \"unchanged\";\n}>`\n  padding: 0 1rem;\n\n  ${(props) => {\n    switch (props.variant) {\n      case \"added\":\n        return css`\n          background-color: #197546;\n        `;\n      case \"removed\":\n        return css`\n          background-color: #ab3939;\n        `;\n      case \"unchanged\":\n      default:\n        return css``;\n    }\n  }}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const ScenarioItem = styled.article`\n  padding: 1rem 1rem 2rem 1rem;\n`;\nexport const ScenarioItemName = styled.div`\n  font-size: 1.2rem;\n  margin-bottom: 0.25rem;\n  font-weight: bold;\n`;\nexport const ScenarioItemDescription = styled.small`\n  display: block;\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n`;\nexport const ScenarioItemStepList = styled.ol`\n  margin: 0;\n  padding: 0 0 0 1rem;\n`;\nexport const ScenarioItemStepListItem = styled.li.attrs({\n  role: \"button\",\n  tabIndex: 0,\n})<{ active: boolean }>`\n  cursor: pointer;\n  color: #1d68f3;\n  text-decoration: underline;\n  outline: none;\n\n  ${(props) =>\n    props.active &&\n    css`\n      font-weight: bold;\n      text-decoration: none;\n    `}\n`;\n","export interface Bsd {\n  customId: string;\n  emitter: Emitter;\n  temporaryStorage: TemporaryStorage | null;\n  recipient: Recipient;\n  waste: Waste;\n}\n\ninterface Waste {\n  code: string;\n  description: string;\n  consistency: WasteConsistency;\n\n  // This field may be changed by the temporaryStorage\n  // It seems that it has more to do with the way it's packaged\n  // so it should probably be a property of Transporter\n  adr: string;\n}\nexport enum WasteConsistency {\n  Solid = \"SOLID\",\n  Liquid = \"LIQUID\",\n  Gaseous = \"GASEOUS\",\n}\n\ninterface Emitter {\n  type: EmitterType;\n  company: Company;\n  signature: Signature | null;\n  nextTreatmentOperation: TreatmentOperation;\n}\nexport enum EmitterType {\n  Producer = \"PRODUCER\",\n  Appendix1 = \"APPENDIX1\",\n  Appendix2 = \"APPENDIX2\",\n  Other = \"OTHER\",\n}\n\ninterface Transporter {\n  company: Company;\n  receipt: TransporterReceipt;\n\n  // When creating the BSD, the producer cannot estimate the weight of the packages\n  // that are leaving the temporary storage to the final recipient\n  // So the weight should probably be nullable\n  // It would also make it possible for the producer to not make any estimate\n  // and leave it to the transporter when they arrive on the site\n  weight: WasteWeight;\n  // The packages are also unknown but that's ok since it's an array and thus can be empty\n  packages: TransporterPackage[];\n\n  signature: Signature | null;\n}\nexport interface TransporterReceipt {\n  number: string;\n  department: string;\n  expiresAt: string;\n  mode: string;\n}\nexport interface TransporterPackage {\n  type: TransporterPackageType;\n  quantity: number;\n}\nexport enum TransporterPackageType {\n  Benne = \"BENNE\",\n  Citerne = \"CITERNE\",\n  GRV = \"GRV\",\n  Fut = \"FUT\",\n  Other = \"OTHER\",\n}\n\nexport interface TemporaryStorage {\n  company: Company;\n  reception: Reception | null;\n\n  // It seems that the temporary storage's treatment is never filled\n  // We assume that it did what the emitter thought it would\n  // And if the emitter made a mistake, the temporary storage update can change their prediction\n  treatment: Treatment | null;\n\n  transporter: Transporter;\n  signature: Signature | null;\n  nextTreatmentOperation: TreatmentOperation;\n}\n\ninterface Recipient {\n  company: Company;\n  reception: Reception | null;\n  treatment: Treatment | null;\n  transporter: Transporter;\n}\n\nexport interface Reception {\n  date: string;\n  weight: WasteWeight;\n  refusal: string | null;\n  signature: Signature | null;\n}\n\nexport interface Signature {\n  author: string;\n  date: string;\n}\n\ninterface WasteWeight {\n  type: WasteWeightType;\n  tons: number;\n}\nexport enum WasteWeightType {\n  Real = \"REAL\",\n  Estimate = \"ESTIMATE\",\n}\n\nexport interface Treatment {\n  operation: TreatmentOperation;\n  signature: Signature;\n}\ninterface TreatmentOperation {\n  code: string;\n  description: string;\n}\n\nexport interface Company {\n  siret: string;\n  name: string;\n  address: string;\n  phone: string;\n  email: string;\n  contact: string;\n}\n","import * as React from \"react\";\nimport { Field } from \"formik\";\nimport { BsdList, BsdListItem, BsdInputField } from \"../components\";\n\ninterface BsdCompanyProps {\n  name: string;\n}\n\nexport function BsdCompany({ name }: BsdCompanyProps) {\n  return (\n    <BsdList>\n      <BsdListItem>\n        <label>\n          N° SIRET :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.siret`} />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Nom :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.name`} />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Adresse :{\" \"}\n          <Field\n            component={BsdInputField}\n            type=\"text\"\n            name={`${name}.address`}\n          />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Tél :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.phone`} />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Mél :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.email`} />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Personne à contacter :{\" \"}\n          <Field\n            component={BsdInputField}\n            type=\"text\"\n            name={`${name}.contact`}\n          />\n        </label>\n      </BsdListItem>\n    </BsdList>\n  );\n}\n","import * as React from \"react\";\nimport { Field } from \"formik\";\nimport { BsdList, BsdListItem, BsdInputField } from \"../components\";\n\ninterface BsdNextTreatmentOperationProps {\n  name: string;\n}\n\nexport function BsdNextTreatmentOperation({\n  name,\n}: BsdNextTreatmentOperationProps) {\n  return (\n    <BsdList>\n      <BsdListItem>\n        <label>\n          Opération d'élminitation prévue :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.code`} />\n        </label>\n      </BsdListItem>\n    </BsdList>\n  );\n}\n","import * as React from \"react\";\nimport { FieldArray, Field, useField } from \"formik\";\nimport { TransporterPackage, TransporterPackageType } from \"../types\";\nimport { BsdList, BsdListItem, BsdInputField } from \"../components\";\n\ninterface BsdPackagesProps {\n  name: string;\n}\n\nexport function BsdPackages({ name }: BsdPackagesProps) {\n  const [field] = useField<TransporterPackage[]>(name);\n\n  return (\n    <FieldArray name={name}>\n      {({ remove, push }) => (\n        <>\n          {field.value.map((_, index) => (\n            <BsdList key={index} orientation=\"horizontal\">\n              <BsdListItem>\n                <label>\n                  Nombre :{\" \"}\n                  <Field\n                    component={BsdInputField}\n                    type=\"number\"\n                    name={`${name}.${index}.quantity`}\n                  />\n                </label>\n              </BsdListItem>\n              <BsdListItem>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name={`${name}.${index}.type`}\n                    value={TransporterPackageType.Benne}\n                  />{\" \"}\n                  Benne\n                </label>\n              </BsdListItem>\n              <BsdListItem>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name={`${name}.${index}.type`}\n                    value={TransporterPackageType.Citerne}\n                  />{\" \"}\n                  Citerne\n                </label>\n              </BsdListItem>\n              <BsdListItem>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name={`${name}.${index}.type`}\n                    value={TransporterPackageType.Fut}\n                  />{\" \"}\n                  Fût\n                </label>\n              </BsdListItem>\n              <BsdListItem>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name={`${name}.${index}.type`}\n                    value={TransporterPackageType.GRV}\n                  />{\" \"}\n                  GRV\n                </label>\n              </BsdListItem>\n              <BsdListItem>\n                <label>\n                  <Field\n                    type=\"radio\"\n                    name={`${name}.${index}.type`}\n                    value={TransporterPackageType.Other}\n                  />{\" \"}\n                  Autre\n                </label>\n              </BsdListItem>\n              <BsdListItem>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    remove(index);\n                  }}\n                >\n                  Retirer\n                </button>\n              </BsdListItem>\n            </BsdList>\n          ))}\n          <BsdList>\n            <BsdListItem>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const newPackage: TransporterPackage = {\n                    quantity: 1,\n                    type: TransporterPackageType.Other,\n                  };\n                  push(newPackage);\n                }}\n              >\n                Ajouter\n              </button>\n            </BsdListItem>\n          </BsdList>\n        </>\n      )}\n    </FieldArray>\n  );\n}\n","import * as React from \"react\";\nimport { Field } from \"formik\";\nimport { WasteWeightType } from \"../types\";\nimport { BsdList, BsdListItem, BsdInputField } from \"../components\";\n\ninterface BsdQuantityProps {\n  name: string;\n}\n\nexport function BsdQuantity({ name }: BsdQuantityProps) {\n  return (\n    <BsdList orientation=\"horizontal\">\n      <BsdListItem>\n        <label>\n          <Field\n            type=\"radio\"\n            name={`${name}.type`}\n            value={WasteWeightType.Estimate}\n          />{\" \"}\n          Estimée\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          <Field\n            type=\"radio\"\n            name={`${name}.type`}\n            value={WasteWeightType.Real}\n          />{\" \"}\n          Réelle\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <Field component={BsdInputField} type=\"number\" name={`${name}.tons`} />{\" \"}\n        tonne(s)\n      </BsdListItem>\n    </BsdList>\n  );\n}\n","import * as React from \"react\";\nimport { Field } from \"formik\";\nimport { BsdList, BsdListItem, BsdInputField } from \"../components\";\n\ninterface BsdTransporterReceiptProps {\n  name: string;\n}\n\nexport function BsdTransporterReceipt({ name }: BsdTransporterReceiptProps) {\n  return (\n    <BsdList>\n      <BsdListItem>\n        <label>\n          Récépissé n° :{\" \"}\n          <Field\n            component={BsdInputField}\n            type=\"text\"\n            name={`${name}.number`}\n          />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Département :{\" \"}\n          <Field\n            component={BsdInputField}\n            type=\"text\"\n            name={`${name}.department`}\n          />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Limite de validité :{\" \"}\n          <Field\n            component={BsdInputField}\n            type=\"text\"\n            name={`${name}.expiresAt`}\n          />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Mode de transport :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.mode`} />\n        </label>\n      </BsdListItem>\n    </BsdList>\n  );\n}\n","import * as React from \"react\";\nimport { Field } from \"formik\";\nimport { BsdList, BsdListItem, BsdInputField } from \"../components\";\n\ninterface BsdSignatureProps {\n  name: string;\n  onCancel: () => void;\n}\n\nexport function BsdSignature({ name, onCancel }: BsdSignatureProps) {\n  return (\n    <BsdList>\n      <BsdListItem>\n        <label>\n          Date :{\" \"}\n          <Field component={BsdInputField} type=\"text\" name={`${name}.date`} />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <label>\n          Signature :{\" \"}\n          <Field\n            component={BsdInputField}\n            type=\"text\"\n            name={`${name}.author`}\n          />\n        </label>\n      </BsdListItem>\n      <BsdListItem>\n        <button type=\"button\" onClick={onCancel}>\n          Annuler la signature\n        </button>\n      </BsdListItem>\n    </BsdList>\n  );\n}\n","import * as React from \"react\";\nimport { useFormikContext, Field } from \"formik\";\nimport {\n  BsdContainer,\n  BsdBox,\n  BsdBoxColumn,\n  BsdLabel,\n  BsdList,\n  BsdListItem,\n  BsdInputField,\n} from \"../components\";\nimport {\n  Bsd,\n  EmitterType,\n  TemporaryStorage,\n  WasteConsistency,\n  Signature,\n  Reception,\n  WasteWeightType,\n  Treatment,\n} from \"../types\";\nimport { BsdCompany } from \"./BsdCompany\";\nimport { BsdNextTreatmentOperation } from \"./BsdNextTreatmentOperation\";\nimport { BsdPackages } from \"./BsdPackages\";\nimport { BsdQuantity } from \"./BsdQuantity\";\nimport { BsdTransporterReceipt } from \"./BsdTransporterReceipt\";\nimport { BsdSignature } from \"./BsdSignature\";\n\nexport function BsdDocument() {\n  const { values, setFieldValue } = useFormikContext<Bsd>();\n\n  return (\n    <BsdContainer>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>Bordereau n°</BsdLabel>\n          <BsdList>\n            <BsdListItem>\n              <Field component={BsdInputField} type=\"text\" name=\"customId\" />\n            </BsdListItem>\n          </BsdList>\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>1. Émetteur du bordereau</BsdLabel>\n          <BsdList>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"emitter.type\"\n                  value={EmitterType.Producer}\n                />{\" \"}\n                Producteur du déchet\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"emitter.type\"\n                  value={EmitterType.Appendix1}\n                />{\" \"}\n                Collecteur de petites quantités de déchets relevant d’une même\n                rubrique (joindre annexe 1)\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"emitter.type\"\n                  value={EmitterType.Appendix2}\n                />{\" \"}\n                Personne ayant transformé ou réalisé un traitement dont la\n                provenance des déchets reste identifiable (joindre annexe 2)\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"emitter.type\"\n                  value={EmitterType.Other}\n                />{\" \"}\n                Autre détenteur\n              </label>\n            </BsdListItem>\n          </BsdList>\n          <BsdCompany name=\"emitter.company\" />\n        </BsdBoxColumn>\n        <BsdBoxColumn>\n          <BsdLabel>\n            2. Installation de destination ou d’entreposage ou de\n            reconditionnement prévue\n          </BsdLabel>\n          <BsdList>\n            <BsdListItem>\n              Entreposage provisoire ou reconditionnement\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"hasTemporaryStorage\"\n                  checked={Boolean(values.temporaryStorage)}\n                  onChange={() => {\n                    const temporaryStorage: TemporaryStorage = {\n                      company: values.recipient.transporter.company,\n                      reception: null,\n                      signature: null,\n                      nextTreatmentOperation:\n                        values.emitter.nextTreatmentOperation,\n                      transporter: values.recipient.transporter,\n                      treatment: null,\n                    };\n                    setFieldValue(\"temporaryStorage\", temporaryStorage);\n                  }}\n                />{\" \"}\n                Oui (cadres 13 à 19 à remplir)\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"hasTemporaryStorage\"\n                  checked={values.temporaryStorage == null}\n                  onChange={() => {\n                    setFieldValue(\"temporaryStorage\", null);\n                  }}\n                />{\" \"}\n                Non\n              </label>\n            </BsdListItem>\n          </BsdList>\n          {values.temporaryStorage ? (\n            <BsdCompany name=\"temporaryStorage.company\" />\n          ) : (\n            <BsdCompany name=\"recipient.company\" />\n          )}\n          <BsdNextTreatmentOperation name=\"emitter.nextTreatmentOperation\" />\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>3. Dénomination du déchet</BsdLabel>\n          <BsdList>\n            <BsdListItem>\n              <label>\n                Rubrique du déchet :{\" \"}\n                <Field\n                  component={BsdInputField}\n                  type=\"text\"\n                  name=\"waste.code\"\n                />\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                Dénomination usuelle :{\" \"}\n                <Field\n                  component={BsdInputField}\n                  type=\"text\"\n                  name=\"waste.description\"\n                />\n              </label>\n            </BsdListItem>\n          </BsdList>\n          <BsdList orientation=\"horizontal\">\n            <BsdListItem>Consistance :</BsdListItem>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"waste.consistency\"\n                  value={WasteConsistency.Solid}\n                />{\" \"}\n                Solide\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"waste.consistency\"\n                  value={WasteConsistency.Liquid}\n                />{\" \"}\n                Liquide\n              </label>\n            </BsdListItem>\n            <BsdListItem>\n              <label>\n                <Field\n                  type=\"radio\"\n                  name=\"waste.consistency\"\n                  value={WasteConsistency.Gaseous}\n                />{\" \"}\n                Gazeux\n              </label>\n            </BsdListItem>\n          </BsdList>\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>\n            4. Mentions au titre des règlements ADR, RID, ADNR, IMDG (le cas\n            échéant)\n          </BsdLabel>\n          <BsdList>\n            <BsdListItem>\n              <Field component={BsdInputField} type=\"text\" name=\"waste.adr\" />\n            </BsdListItem>\n          </BsdList>\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>5. Conditionnement</BsdLabel>\n          {values.temporaryStorage ? (\n            <BsdPackages name=\"temporaryStorage.transporter.packages\" />\n          ) : (\n            <BsdPackages name=\"recipient.transporter.packages\" />\n          )}\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>6. Quantité</BsdLabel>\n          {values.temporaryStorage ? (\n            <BsdQuantity name=\"temporaryStorage.transporter.weight\" />\n          ) : (\n            <BsdQuantity name=\"recipient.transporter.weight\" />\n          )}\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>8. Collecteur-transporteur</BsdLabel>\n          <BsdCompany name=\"recipient.transporter.company\" />\n          <BsdTransporterReceipt name=\"recipient.transporter.receipt\" />\n          {values.temporaryStorage ? (\n            <>\n              {values.temporaryStorage.transporter.signature ? (\n                <BsdSignature\n                  name=\"temporaryStorage.transporter.signature\"\n                  onCancel={() => {\n                    setFieldValue(\n                      \"temporaryStorage.transporter.signature\",\n                      null\n                    );\n                  }}\n                />\n              ) : (\n                <BsdList>\n                  <BsdListItem>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const signature: Signature = {\n                          author: values.temporaryStorage!.transporter.company\n                            .contact,\n                          date: new Date().toLocaleDateString(),\n                        };\n                        setFieldValue(\n                          \"temporaryStorage.transporter.signature\",\n                          signature\n                        );\n                      }}\n                    >\n                      Signer l'enlèvement\n                    </button>\n                  </BsdListItem>\n                </BsdList>\n              )}\n            </>\n          ) : (\n            <>\n              {values.recipient.transporter.signature ? (\n                <BsdSignature\n                  name=\"recipient.transporter.signature\"\n                  onCancel={() => {\n                    setFieldValue(\"recipient.transporter.signature\", null);\n                  }}\n                />\n              ) : (\n                <BsdList>\n                  <BsdListItem>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const signature: Signature = {\n                          author: values.recipient.transporter.company.contact,\n                          date: new Date().toLocaleDateString(),\n                        };\n                        setFieldValue(\n                          \"recipient.transporter.signature\",\n                          signature\n                        );\n                      }}\n                    >\n                      Signer l'enlèvement\n                    </button>\n                  </BsdListItem>\n                </BsdList>\n              )}\n            </>\n          )}\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>\n            9. Déclaration générale de l’émetteur du bordereau\n          </BsdLabel>\n          <BsdList>\n            <BsdListItem>\n              Je soussigné certifie que les renseignements portés dans les\n              cadres ci-dessus sont exacts et établis de bonne foi\n            </BsdListItem>\n          </BsdList>\n          {values.emitter.signature ? (\n            <BsdSignature\n              name=\"emitter.signature\"\n              onCancel={() => {\n                setFieldValue(\"emitter.signature\", null);\n              }}\n            />\n          ) : (\n            <BsdList>\n              <BsdListItem>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    const signature: Signature = {\n                      author: values.emitter.company.contact,\n                      date: new Date().toLocaleDateString(),\n                    };\n                    setFieldValue(\"emitter.signature\", signature);\n                  }}\n                >\n                  Signer l'enlèvement\n                </button>\n              </BsdListItem>\n            </BsdList>\n          )}\n        </BsdBoxColumn>\n      </BsdBox>\n      <BsdBox>\n        <BsdBoxColumn>\n          <BsdLabel>\n            10. Expédition reçue à l’installation de destination\n          </BsdLabel>\n          <BsdCompany name=\"recipient.company\" />\n          {values.recipient.reception ? (\n            <>\n              <BsdList>\n                <BsdListItem>\n                  <label>\n                    Quantité réelle présentée :{\" \"}\n                    <Field\n                      component={BsdInputField}\n                      name=\"recipient.reception.weight.tons\"\n                    />\n                  </label>\n                </BsdListItem>\n                <BsdListItem>\n                  <label>\n                    Date de présentation :{\" \"}\n                    <Field\n                      component={BsdInputField}\n                      name=\"recipient.reception.date\"\n                    />\n                  </label>\n                </BsdListItem>\n              </BsdList>\n              <BsdList orientation=\"horizontal\">\n                <BsdListItem>Lot accepté :</BsdListItem>\n                <BsdListItem>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name=\"recipientRefusal\"\n                      checked={values.recipient.reception.refusal == null}\n                      onChange={() => {\n                        setFieldValue(\"recipient.reception.refusal\", null);\n                      }}\n                    />{\" \"}\n                    Oui\n                  </label>\n                </BsdListItem>\n                <BsdListItem>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name=\"recipientRefusal\"\n                      checked={values.recipient.reception.refusal != null}\n                      onChange={() => {\n                        setFieldValue(\n                          \"recipient.reception.refusal\",\n                          \"Préciser la raison\"\n                        );\n                      }}\n                    />{\" \"}\n                    Non\n                  </label>\n                </BsdListItem>\n              </BsdList>\n              {values.recipient.reception.refusal != null && (\n                <BsdList>\n                  <BsdListItem>\n                    <label>\n                      Motif de refus :{\" \"}\n                      <Field\n                        component={BsdInputField}\n                        type=\"text\"\n                        name=\"recipient.reception.refusal\"\n                      />\n                    </label>\n                  </BsdListItem>\n                </BsdList>\n              )}\n              {values.recipient.reception.signature ? (\n                <BsdSignature\n                  name=\"recipient.reception.signature\"\n                  onCancel={() => {\n                    setFieldValue(\"recipient.reception.signature\", null);\n                  }}\n                />\n              ) : (\n                <BsdList>\n                  <BsdListItem>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const signature: Signature = {\n                          author: values.recipient.company.contact,\n                          date: new Date().toLocaleDateString(),\n                        };\n                        setFieldValue(\n                          \"recipient.reception.signature\",\n                          signature\n                        );\n                      }}\n                    >\n                      Signer la prise en charge\n                    </button>\n                  </BsdListItem>\n                </BsdList>\n              )}\n              <BsdList>\n                <BsdListItem>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setFieldValue(\"recipient.reception\", null);\n                    }}\n                  >\n                    Annuler la réception\n                  </button>\n                </BsdListItem>\n              </BsdList>\n            </>\n          ) : (\n            <BsdList>\n              <BsdListItem>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    const reception: Reception = {\n                      date: new Date().toLocaleDateString(),\n                      refusal: null,\n                      signature: null,\n                      weight:\n                        values.temporaryStorage?.reception?.weight ??\n                        values.recipient.transporter.weight,\n                    };\n                    setFieldValue(\"recipient.reception\", reception);\n                  }}\n                >\n                  Réceptionner le déchet\n                </button>\n              </BsdListItem>\n            </BsdList>\n          )}\n        </BsdBoxColumn>\n        <BsdBoxColumn>\n          <BsdLabel>11. Réalisation de l’opération</BsdLabel>\n          {values.recipient.treatment ? (\n            <>\n              <BsdList>\n                <BsdListItem>\n                  <label>\n                    Code D/R :{\" \"}\n                    <Field\n                      component={BsdInputField}\n                      type=\"text\"\n                      name=\"recipient.treatment.operation.code\"\n                    />\n                  </label>\n                </BsdListItem>\n                <BsdListItem>\n                  <label>\n                    Description :{\" \"}\n                    <Field\n                      component={BsdInputField}\n                      type=\"text\"\n                      name=\"recipient.treatment.operation.description\"\n                    />\n                  </label>\n                </BsdListItem>\n              </BsdList>\n              <BsdList>\n                <BsdListItem>\n                  Je soussigné certifie que l’opération ci-dessus a été\n                  effectuée\n                </BsdListItem>\n              </BsdList>\n              <BsdSignature\n                name=\"recipient.treatment.signature\"\n                onCancel={() => {\n                  setFieldValue(\"recipient.treatment\", null);\n                }}\n              />\n            </>\n          ) : (\n            <BsdList>\n              <BsdListItem>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    const treatment: Treatment = {\n                      operation:\n                        values.temporaryStorage?.nextTreatmentOperation ??\n                        values.emitter.nextTreatmentOperation,\n                      signature: {\n                        author: values.recipient.company.contact,\n                        date: new Date().toLocaleDateString(),\n                      },\n                    };\n                    setFieldValue(\"recipient.treatment\", treatment);\n                  }}\n                >\n                  Signer la réalisation de l'opération\n                </button>\n              </BsdListItem>\n            </BsdList>\n          )}\n        </BsdBoxColumn>\n      </BsdBox>\n      {values.temporaryStorage && (\n        <>\n          <BsdBox>\n            <BsdBoxColumn>\n              <BsdLabel>\n                13. Réception dans l’installation d’entreposage ou de\n                reconditionnement\n              </BsdLabel>\n              <BsdCompany name=\"temporaryStorage.company\" />\n              {values.temporaryStorage.reception ? (\n                <>\n                  <BsdList>\n                    <BsdListItem>\n                      Quantité présentée :{\" \"}\n                      <label>\n                        <Field\n                          type=\"radio\"\n                          name=\"temporaryStorage.reception.weight.type\"\n                          value={WasteWeightType.Estimate}\n                        />{\" \"}\n                        Estimée\n                      </label>{\" \"}\n                      <label>\n                        <Field\n                          type=\"radio\"\n                          name=\"temporaryStorage.reception.weight.type\"\n                          value={WasteWeightType.Real}\n                        />{\" \"}\n                        Réelle\n                      </label>{\" \"}\n                      <Field\n                        component={BsdInputField}\n                        type=\"number\"\n                        name=\"temporaryStorage.reception.weight.tons\"\n                      />{\" \"}\n                      tonne(s)\n                    </BsdListItem>\n                    <BsdListItem>\n                      <label>\n                        Date de présentation :{\" \"}\n                        <Field\n                          component={BsdInputField}\n                          name=\"temporaryStorage.reception.date\"\n                        />\n                      </label>\n                    </BsdListItem>\n                  </BsdList>\n                  <BsdList orientation=\"horizontal\">\n                    <BsdListItem>Lot accepté :</BsdListItem>\n                    <BsdListItem>\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name=\"temporaryStorageRefusal\"\n                          checked={\n                            values.temporaryStorage.reception.refusal == null\n                          }\n                          onChange={() => {\n                            setFieldValue(\n                              \"temporaryStorage.reception.refusal\",\n                              null\n                            );\n                          }}\n                        />{\" \"}\n                        Oui\n                      </label>\n                    </BsdListItem>\n                    <BsdListItem>\n                      <label>\n                        <input\n                          type=\"radio\"\n                          name=\"temporaryStorageRefusal\"\n                          checked={\n                            values.temporaryStorage.reception.refusal != null\n                          }\n                          onChange={() => {\n                            setFieldValue(\n                              \"temporaryStorage.reception.refusal\",\n                              \"Préciser la raison\"\n                            );\n                          }}\n                        />{\" \"}\n                        Non\n                      </label>\n                    </BsdListItem>\n                  </BsdList>\n                  {values.temporaryStorage.reception.refusal != null && (\n                    <BsdList>\n                      <BsdListItem>\n                        <label>\n                          Motif de refus :{\" \"}\n                          <Field\n                            component={BsdInputField}\n                            type=\"text\"\n                            name=\"temporaryStorage.reception.refusal\"\n                          />\n                        </label>\n                      </BsdListItem>\n                    </BsdList>\n                  )}\n                  {values.temporaryStorage.reception.signature ? (\n                    <BsdSignature\n                      name=\"temporaryStorage.reception.signature\"\n                      onCancel={() => {\n                        setFieldValue(\n                          \"temporaryStorage.reception.signature\",\n                          null\n                        );\n                      }}\n                    />\n                  ) : (\n                    <BsdList>\n                      <BsdListItem>\n                        <button\n                          type=\"button\"\n                          onClick={() => {\n                            const signature: Signature = {\n                              author: values.temporaryStorage!.company.contact,\n                              date: new Date().toLocaleDateString(),\n                            };\n                            setFieldValue(\n                              \"temporaryStorage.reception.signature\",\n                              signature\n                            );\n                          }}\n                        >\n                          Signer la prise en charge\n                        </button>\n                      </BsdListItem>\n                    </BsdList>\n                  )}\n                  <BsdList>\n                    <BsdListItem>\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          setFieldValue(\"temporaryStorage.reception\", null);\n                        }}\n                      >\n                        Annuler la réception\n                      </button>\n                    </BsdListItem>\n                  </BsdList>\n                </>\n              ) : (\n                <BsdList>\n                  <BsdListItem>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const reception: Reception = {\n                          date: new Date().toLocaleDateString(),\n                          refusal: null,\n                          signature: null,\n                          weight: values.recipient.transporter.weight,\n                        };\n                        setFieldValue(\"temporaryStorage.reception\", reception);\n                      }}\n                    >\n                      Réceptionner le déchet\n                    </button>\n                  </BsdListItem>\n                </BsdList>\n              )}\n            </BsdBoxColumn>\n            <BsdBoxColumn>\n              <BsdLabel>14. Installation de destination prévue</BsdLabel>\n              <BsdCompany name=\"recipient.company\" />\n              <BsdNextTreatmentOperation name=\"temporaryStorage.nextTreatmentOperation\" />\n            </BsdBoxColumn>\n          </BsdBox>\n          <BsdBox>\n            <BsdBoxColumn>\n              <BsdLabel>16. Conditionnement</BsdLabel>\n              <BsdPackages name=\"recipient.transporter.packages\" />\n            </BsdBoxColumn>\n          </BsdBox>\n          <BsdBox>\n            <BsdBoxColumn>\n              <BsdLabel>17. Quantité</BsdLabel>\n              <BsdQuantity name=\"recipient.transporter.weight\" />\n            </BsdBoxColumn>\n          </BsdBox>\n          <BsdBox>\n            <BsdBoxColumn>\n              <BsdLabel>\n                18. Collecteur-transporteur après entreposage ou\n                reconditionnement\n              </BsdLabel>\n              <BsdCompany name=\"recipient.transporter.company\" />\n              <BsdTransporterReceipt name=\"recipient.transporter.receipt\" />\n              {values.recipient.transporter.signature ? (\n                <BsdSignature\n                  name=\"recipient.transporter.signature\"\n                  onCancel={() => {\n                    setFieldValue(\"recipient.transporter.signature\", null);\n                  }}\n                />\n              ) : (\n                <BsdList>\n                  <BsdListItem>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const signature: Signature = {\n                          author: values.recipient.transporter.company.contact,\n                          date: new Date().toLocaleDateString(),\n                        };\n                        setFieldValue(\n                          \"recipient.transporter.signature\",\n                          signature\n                        );\n                      }}\n                    >\n                      Signer l'enlèvement\n                    </button>\n                  </BsdListItem>\n                </BsdList>\n              )}\n            </BsdBoxColumn>\n          </BsdBox>\n          <BsdBox>\n            <BsdBoxColumn>\n              <BsdLabel>\n                19. Déclaration de l’exploitant du site d’entreposage ou de\n                reconditionnement\n              </BsdLabel>\n              <BsdList>\n                <BsdListItem>\n                  Je soussigné certifie que les renseignements portés ci-dessus\n                  sont exacts et établis de bonne foi\n                </BsdListItem>\n              </BsdList>\n              {values.temporaryStorage.signature ? (\n                <BsdSignature\n                  name=\"temporaryStorage.signature\"\n                  onCancel={() => {\n                    setFieldValue(\"temporaryStorage.signature\", null);\n                  }}\n                />\n              ) : (\n                <BsdList>\n                  <BsdListItem>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const signature: Signature = {\n                          author: values.temporaryStorage!.company.contact,\n                          date: new Date().toLocaleDateString(),\n                        };\n                        setFieldValue(\"temporaryStorage.signature\", signature);\n                      }}\n                    >\n                      Signer l'enlèvement\n                    </button>\n                  </BsdListItem>\n                </BsdList>\n              )}\n            </BsdBoxColumn>\n          </BsdBox>\n        </>\n      )}\n    </BsdContainer>\n  );\n}\n","import * as React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { Formik } from \"formik\";\nimport { diffJson } from \"diff\";\nimport produce from \"immer\";\nimport {\n  CodeContainer,\n  CodeLine,\n  ScenarioItem,\n  ScenarioItemDescription,\n  ScenarioItemName,\n  ScenarioItemStepList,\n  ScenarioItemStepListItem,\n} from \"./components\";\nimport { BsdDocument } from \"./containers\";\nimport {\n  Bsd,\n  EmitterType,\n  TransporterPackageType,\n  WasteConsistency,\n  WasteWeightType,\n  Company,\n  TransporterReceipt,\n} from \"./types\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 16px;\n  }\n\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    font-size: 1rem;\n    line-height: 1.4;\n    color: #060a2b;\n    background-color: #f6f7ff;\n  }\n`;\nconst Layout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\nconst LayoutColumn = styled.div`\n  max-height: 100vh;\n  overflow-y: auto;\n`;\nconst LayoutColumnTitle = styled.div`\n  font-size: 0.8rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 0.05rem;\n  padding: 1rem;\n  color: #5d64a2;\n`;\nconst ScenariosColumn = styled(LayoutColumn)`\n  width: 20%;\n`;\nconst BsdColumn = styled(LayoutColumn)`\n  flex: 1;\n  background-color: #fff;\n`;\nconst CodeColumn = styled(LayoutColumn)`\n  width: 30%;\n  color: #f6f7ff;\n  background-color: #161c4e;\n  font-size: 0.9rem;\n`;\n\ninterface Scenario {\n  name: string;\n  description: string;\n  steps: ScenarioStep[];\n}\ninterface ScenarioStep {\n  name: string;\n  bsd: Bsd;\n}\n\nfunction produceScenarioSteps(\n  firstStep: ScenarioStep,\n  producers: Array<(previousStep: ScenarioStep) => void>\n): ScenarioStep[] {\n  return producers\n    .map((fn) => produce(fn))\n    .reduce((acc, producer) => acc.concat([producer(acc[acc.length - 1])]), [\n      firstStep,\n    ]);\n}\n\nconst EMITTER_COMPANY: Company = {\n  siret: \"9012931804340\",\n  name: \"PRODUCTEUR BOLLIER\",\n  address: \"92 rue Michel Leperlier, 69001 Lyon\",\n  contact: \"GRONDIN Jeanne\",\n  email: \"jeanne@producteur-bollier.com\",\n  phone: \"06 23 53 12 60\",\n};\nconst TRANSPORTER_COMPANY: Company = {\n  siret: \"8059380912480\",\n  name: \"TRANSPORTEUR JOSÉ\",\n  address: \"9 rue Lemarchand, 69000 Lyon\",\n  contact: \"PAYET Jérémy\",\n  email: \"jeremy@transporteur-jose.com\",\n  phone: \"06 98 23 59 43\",\n};\nconst TRANSPORTER_RECEIPT: TransporterReceipt = {\n  number: \"0129301930219\",\n  department: \"69\",\n  expiresAt: \"01/01/2026\",\n  mode: \"routier\",\n};\nconst RECIPIENT_COMPANY: Company = {\n  siret: \"8210328194719\",\n  name: \"COLLECTEUR DUPONT\",\n  address: \"523 rue du Maréchal, 69000 Lyon\",\n  contact: \"RIVIERE Camille\",\n  email: \"camille@collecteur-dupont.com\",\n  phone: \"06 98 24 54 71\",\n};\n\nconst SCENARIOS: Scenario[] = [\n  {\n    name: \"Classique\",\n    description: \"Le déchet part du producteur et va directement à l'exutoire.\",\n    steps: produceScenarioSteps(\n      {\n        name: \"Création du BSD\",\n        bsd: {\n          customId: \"EX-00000001\",\n          emitter: {\n            type: EmitterType.Producer,\n            company: EMITTER_COMPANY,\n            signature: null,\n            nextTreatmentOperation: {\n              code: \"R1\",\n              description: \"Traitement R1\",\n            },\n          },\n          temporaryStorage: null,\n          recipient: {\n            company: RECIPIENT_COMPANY,\n            transporter: {\n              company: TRANSPORTER_COMPANY,\n              receipt: TRANSPORTER_RECEIPT,\n              packages: [\n                {\n                  type: TransporterPackageType.Benne,\n                  quantity: 1,\n                },\n              ],\n              weight: {\n                type: WasteWeightType.Estimate,\n                tons: 0.5,\n              },\n              signature: null,\n            },\n            reception: null,\n            treatment: null,\n          },\n          waste: {\n            adr: \"\",\n            code: \"01 01 01\",\n            description: \"Débris de métaux\",\n            consistency: WasteConsistency.Solid,\n          },\n        },\n      },\n      [\n        (step) => {\n          step.name = \"Signature de l'enlèvement\";\n          step.bsd.emitter.signature = {\n            author: step.bsd.emitter.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n          step.bsd.recipient.transporter.signature = {\n            author: step.bsd.recipient.transporter.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n        },\n        (step) => {\n          step.name = \"Arrivée à l'installation de destination\";\n          step.bsd.recipient.reception = {\n            date: new Date().toLocaleDateString(),\n            refusal: null,\n            signature: null,\n            weight: step.bsd.recipient.transporter.weight,\n          };\n        },\n        (step) => {\n          step.name = \"Accepté par l'installation de destination\";\n          step.bsd.recipient.reception!.signature = {\n            author: step.bsd.recipient.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n        },\n        (step) => {\n          step.name = \"Traité par l'installation de destination\";\n          step.bsd.recipient.treatment = {\n            operation: step.bsd.emitter.nextTreatmentOperation,\n            signature: {\n              author: step.bsd.recipient.company.contact,\n              date: new Date().toLocaleDateString(),\n            },\n          };\n        },\n      ]\n    ),\n  },\n  {\n    name: \"Entreposage provisoire\",\n    description:\n      \"Le déchet passe par une étape d'entreposage provisoire avant d'aller à l'exutoire.\",\n    steps: produceScenarioSteps(\n      {\n        name: \"Création du BSD\",\n        bsd: {\n          customId: \"EX-00000001\",\n          emitter: {\n            type: EmitterType.Producer,\n            company: EMITTER_COMPANY,\n            signature: null,\n            nextTreatmentOperation: {\n              code: \"R12\",\n              description: \"Regroupement\",\n            },\n          },\n          temporaryStorage: {\n            company: TRANSPORTER_COMPANY,\n            nextTreatmentOperation: {\n              code: \"R1\",\n              description: \"Traitement R1\",\n            },\n            treatment: null,\n            reception: null,\n            signature: null,\n            transporter: {\n              company: TRANSPORTER_COMPANY,\n              packages: [],\n              receipt: TRANSPORTER_RECEIPT,\n              signature: null,\n              weight: {\n                type: WasteWeightType.Estimate,\n                tons: 0.5,\n              },\n            },\n          },\n          recipient: {\n            company: RECIPIENT_COMPANY,\n            transporter: {\n              company: TRANSPORTER_COMPANY,\n              receipt: TRANSPORTER_RECEIPT,\n              packages: [\n                {\n                  type: TransporterPackageType.Benne,\n                  quantity: 1,\n                },\n              ],\n              weight: {\n                type: WasteWeightType.Estimate,\n                tons: 0.5,\n              },\n              signature: null,\n            },\n            reception: null,\n            treatment: null,\n          },\n          waste: {\n            adr: \"\",\n            code: \"01 01 01\",\n            description: \"Débris de métaux\",\n            consistency: WasteConsistency.Solid,\n          },\n        },\n      },\n      [\n        (step) => {\n          step.name = \"Signature de l'enlèvement\";\n          step.bsd.emitter.signature = {\n            author: step.bsd.emitter.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n          step.bsd.temporaryStorage!.transporter.signature = {\n            author: step.bsd.temporaryStorage!.transporter.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n        },\n        (step) => {\n          step.name = \"Arrivée à l'entreposage provisoire\";\n          step.bsd.temporaryStorage!.reception = {\n            date: new Date().toLocaleDateString(),\n            refusal: null,\n            signature: null,\n            weight: step.bsd.temporaryStorage!.transporter.weight,\n          };\n        },\n        (step) => {\n          step.name = \"Accepté par l'entreposage provisoire\";\n          step.bsd.temporaryStorage!.reception!.signature = {\n            author: step.bsd.temporaryStorage!.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n        },\n        (step) => {\n          step.name = \"Dépârt de l'entreposage provisoire\";\n          step.bsd.temporaryStorage!.signature = {\n            author: step.bsd.temporaryStorage!.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n          step.bsd.recipient.transporter.signature = {\n            author: step.bsd.recipient.transporter.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n        },\n        (step) => {\n          step.name = \"Arrivée à l'installation de destination\";\n          step.bsd.recipient.reception = {\n            date: new Date().toLocaleDateString(),\n            refusal: null,\n            signature: null,\n            weight: step.bsd.recipient.transporter.weight,\n          };\n        },\n        (step) => {\n          step.name = \"Accepté par l'installation de destination\";\n          step.bsd.recipient.reception!.signature = {\n            author: step.bsd.recipient.company.contact,\n            date: new Date().toLocaleDateString(),\n          };\n        },\n        (step) => {\n          step.name = \"Traité par l'installation de destination\";\n          step.bsd.recipient.treatment = {\n            operation: step.bsd.emitter.nextTreatmentOperation,\n            signature: {\n              author: step.bsd.recipient.company.contact,\n              date: new Date().toLocaleDateString(),\n            },\n          };\n        },\n      ]\n    ),\n  },\n];\n\nfunction App() {\n  const [currentScenario, setCurrentScenario] = React.useState<{\n    name: string;\n    step: number;\n  }>({\n    name: SCENARIOS[0].name,\n    step: 0,\n  });\n  const { previousInitialValues, initialValues } = React.useMemo(() => {\n    const scenario = SCENARIOS.find(\n      (scenario) => scenario.name === currentScenario.name\n    );\n\n    if (scenario == null) {\n      throw new Error(`No scenario found with name \"${currentScenario.name}\"`);\n    }\n\n    const step = scenario.steps[currentScenario.step];\n\n    if (step == null) {\n      throw new Error(`No step found with index ${currentScenario.step}`);\n    }\n\n    const previousStep = scenario.steps[Math.max(0, currentScenario.step - 1)];\n\n    return {\n      previousInitialValues: previousStep.bsd,\n      initialValues: step.bsd,\n    };\n  }, [currentScenario.name, currentScenario.step]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Layout>\n        <ScenariosColumn>\n          <LayoutColumnTitle>Scénarios</LayoutColumnTitle>\n          {SCENARIOS.map((scenario) => (\n            <ScenarioItem key={scenario.name}>\n              <ScenarioItemName>{scenario.name}</ScenarioItemName>\n              <ScenarioItemDescription>\n                {scenario.description}\n              </ScenarioItemDescription>\n              <ScenarioItemStepList>\n                {scenario.steps.map((step, index) => (\n                  <ScenarioItemStepListItem\n                    key={step.name}\n                    onClick={() =>\n                      setCurrentScenario({ name: scenario.name, step: index })\n                    }\n                    active={\n                      currentScenario.name === scenario.name &&\n                      currentScenario.step === index\n                    }\n                  >\n                    {step.name}\n                  </ScenarioItemStepListItem>\n                ))}\n              </ScenarioItemStepList>\n            </ScenarioItem>\n          ))}\n        </ScenariosColumn>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={() => {}}\n          enableReinitialize\n        >\n          {({ values }) => (\n            <>\n              <BsdColumn>\n                <LayoutColumnTitle>BSD</LayoutColumnTitle>\n                <BsdDocument />\n              </BsdColumn>\n              <CodeColumn>\n                <LayoutColumnTitle>Code</LayoutColumnTitle>\n                <CodeContainer>\n                  {diffJson(previousInitialValues, values).map(\n                    ({ added, removed, value }, index) => (\n                      <CodeLine\n                        key={index}\n                        variant={\n                          added ? \"added\" : removed ? \"removed\" : \"unchanged\"\n                        }\n                      >\n                        {value}\n                      </CodeLine>\n                    )\n                  )}\n                </CodeContainer>\n              </CodeColumn>\n            </>\n          )}\n        </Formik>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}